is_mac="uname | grep -q Darwin"
is_wsl="uname | grep -q microsoft"
is_app="test '#{pane_current_command}' = 'nvim' -o '#{pane_current_command}' = 'fzf'"

# 一般設定 =======================================================================
set -g escape-time 0     # キーストロークのディレイを減らす
set -g display-time 1500  # メッセージ表示時間
set -g mouse on           # マウスを有効にする
set -g base-index 1       # 番号基準値を変更
set -g focus-events on    # フォーカスイベントを子プロセスに送信
setw -g pane-base-index 1 # 番号基準値を変更

# 操作の設定 =====================================================================
## プレフィックス --------------------------
unbind C-b
set -g prefix C-s

## セッション・クライアント -----------------
# bind -n M-a run "zsh -ci tms"
bind -n M-a popup -E "zsh -ci 'tms 100' || true"
bind -n M-q detach-client

## ウィンドウ -----------------------------
set -g renumber-windows on
bind -n M-m command-prompt -p "window name:" -I '#{window_name}' "rename-window '%%'"
bind -n M-t new-window -c '#{pane_current_path}'
bind -n M-p previous-window
bind -n M-n next-window
bind -n M-C-p swap-window -t -1
bind -n M-C-n swap-window -t +1
bind -n M-w confirm -p "kill-window '#{window_name}'? (y/n)" kill-window

## ペイン --------------------------------
bind -n M-v split-window -h -c '#{pane_current_path}'
bind -n M-s split-window -v -c '#{pane_current_path}'
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-C-j swap-pane -D
bind -n M-C-k swap-pane -U
bind -n M-g resize-pane -Z
bind -n M-x confirm -p 'kill-pane #{pane_index}? (y/n)' kill-pane

### リサイズ
bind -n M-H resize-pane -L 2
bind -n M-J resize-pane -D 2
bind -n M-K resize-pane -U 2
bind -n M-L resize-pane -R 2

### レイアウト
bind -n M-1 select-layout even-horizontal
bind -n M-2 select-layout even-vertical
bind -n M-3 select-layout main-horizontal
bind -n M-4 select-layout main-vertical
bind -n M-5 select-layout tiled
bind -n M-9 if -b '[ "$(tmux list-panes | wc -l | xargs echo)" = 1 ]' \
  'run "
    tmux split-window -v -p 30 -c #{pane_current_path};
    tmux split-window -h -c #{pane_current_path};
  "'
bind -n M-0 if -b '[ "$(tmux list-panes | wc -l | xargs echo)" = 1 ]' \
  'run "
    tmux split-window -v -p 25 -c #{pane_current_path};
    tmux split-window -h -p 66 -c #{pane_current_path};
    tmux split-window -h -p 50 -c #{pane_current_path};
  "'

### 移動
bind -n M-i command-prompt -p "join pane to:"  "join-pane -t '%%'"
bind -n M-o break-pane

## コピーモード ---------------------------
setw -g mode-keys vi # コピーモードでvimキーバインドを使う
bind -n M-c copy-mode
bind -n C-u if "$is_app" "send C-u" "copy-mode"
bind -n WheelUpPane if -F -t = "#{mouse_any_flag}" \
  "send -M" "if -Ft= '#{pane_in_mode}' 'send -M' 'copy-mode'"

bind -T copy-mode-vi v send -X begin-selection # 'v' で選択を始める
bind -T copy-mode-vi V send -X select-line # 'V' で行選択
bind -T copy-mode-vi C-v send -X rectangle-toggle # 'C-v' で矩形選択

### スクロール
bind -T copy-mode-vi WheelUpPane select-pane \; send -X -N 1 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send -X -N 1 scroll-down

### EscまたはC-lを押すとコピーモードを抜ける
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-l send -X cancel \; send C-l

### OSごとのコピーの設定を読み込み
if "$is_mac" "source $XDG_CONFIG_HOME/tmux/mac.copy.conf" ""
if "$is_wsl" "source $XDG_CONFIG_HOME/tmux/mac.copy.conf" ""


## その他 --------------------------------
### 設定ファイルをリロードする
bind -n M-r source $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded"

# 外観の設定 =====================================================================
## tmuxを256色表示できるようにする
set -g default-terminal "screen-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
# set -ag terminal-overrides ",$TERM:Tc"

## ステータスバー --------------------------
set -g status on
set -g status-position bottom
set -g status-justify centre
set -g status-interval 1 # 1秒毎に再描画

set -g window-status-format "
  #{=2:window_index}.#{=10:window_name}
  #{?#{&&:#{!=:#{pane_current_command},zsh},#{!=:#{pane_current_command},nvim}},
  [#{pane_current_command}],}"
set -g window-status-current-format \
  " #{=2:window_index}.#{window_name}#{?window_zoomed_flag,*Z#{pane_index},} "
set -g status-right ''
set -g status-left ''

if "test -f $XDG_CONFIG_HOME/tmux/_style.conf" \
  "source $XDG_CONFIG_HOME/tmux/_style.conf" ""
