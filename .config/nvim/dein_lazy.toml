[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = 'call plug#gitgutter#hook_add()'
on_event = 'SourcePre'

[[plugins]]
repo = 'tpope/vim-fugitive'
depends = 'vim-rhubarb'
on_cmd = ['Git', 'Gdiffsplit', 'GBrowse']
hook_add = 'call plug#fugitive#hook_add()'
hook_post_source = 'call plug#fugitive#hook_post_source()'

[[plugins]]
repo = 'tpope/vim-rhubarb'
on_cmd = 'GBrowse'

[[plugins]] # for git push
repo = 'tpope/vim-dispatch'
on_cmd = 'Dispatch'

[[plugins]]
repo = 'jesseleite/vim-agriculture'
on_cmd = ['RgIgnore', 'RgNoIgnore']
on_func = ['RgVisual', 'RgCword']

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_cmd = 'Qfreplace'

[[plugins]]
repo = 'kana/vim-textobj-user'
on_event = 'VimEnter'
hook_post_source = '''
call textobj#user#plugin('underscore', {
\   'a': {
\     'select': 'a_',
\     '*pattern*': '_[^_]*_'
\   },
\   'i': {
\     'select': 'i_',
\     '*pattern*': '_\zs[^_]\+\ze_'
\   },
\ })
call textobj#user#plugin('space', {
\   'a': {
\     'pattern': '[[:blank:]　]\+',
\     'select': ['a<Space>'],
\   },
\   'i': {
\     'pattern': ' \+',
\     'select': ['i<Space>'],
\   },
\ })
'''

[[plugins]]
repo = 'kana/vim-textobj-entire'
on_event = 'VimEnter'

[[plugins]]
repo = 'kana/vim-textobj-indent'
on_event = 'VimEnter'

[[plugins]]
repo = 'kana/vim-textobj-line'
on_event = 'VimEnter'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'
depends = 'vim-textobj-user'
on_event = 'VimEnter'

[[plugins]]
repo = 'glts/vim-textobj-comment'
on_event = 'VimEnter'

[[plugins]]
repo = 'tpope/vim-commentary'
on_map = '<Plug>Commentary'
hook_add = 'call plug#commentary#hook_add()'

[[plugins]]
repo = 'kana/vim-operator-user'
on_event = 'VimEnter'

[[plugins]]
repo = 'kana/vim-operator-replace'
depends = 'vim-operator-user'
on_event = 'VimEnter'

[[plugins]]
repo = 'machakann/vim-sandwich'
on_event = 'VimEnter'
hook_add = 'call plug#sandwich#hook_add()'
hook_post_source = 'call plug#sandwich#hook_post_source()'

[[plugins]]
repo = 'mtth/scratch.vim'
on_cmd = ['Scratch']
on_map = '<plug>(scratch-'
hook_add = 'call plug#scratch#hook_add()'

[[plugins]]
repo = 'mattn/vim-sonictemplate'
on_event = 'VimEnter'
hook_add = '''
let g:sonictemplate_vim_template_dir = g:config_dir . '/templates'
nmap <plug>(sonictemplate-no-mapping1) <plug>(sonictemplate)
nmap <plug>(sonictemplate-no-mapping2) <plug>(sonictemplate-intelligent)
'''

[[plugins]]
repo = 'haya14busa/is.vim'
on_event = 'VimEnter'

[[plugins]]
repo = 'haya14busa/vim-asterisk'
depends = ['is.vim']
on_map = ['<Plug>(asterisk-']
hook_post_source  = 'let g:asterisk#keeppos = 1'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = 'BufEnter'
hook_source = '''
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
MyAutocmd FileType gitcommit let b:EditorConfig_disable = 1
'''

[[plugins]]
repo = '907th/vim-auto-save'
on_event = 'VimEnter'
hook_add = 'call plug#auto_save#hook_add()'

[[plugins]]
repo = 'tpope/vim-repeat'
on_func = 'repeat#set'
hook_post_source = 'call plug#repeat#hook_post_source()'

[[plugins]]
repo = 'nicwest/vim-camelsnek'
on_cmd = ['CamelB', 'Camel', 'Snek', 'Kebab']

[[plugins]]
repo = 'Yggdroot/indentLine'
on_event = 'BufEnter'
hook_source = '''
let g:indentLine_char = '│'
let g:indentLine_fileTypeExclude = ['help', 'vista', 'fern']
'''

[[plugins]]
repo = 'LunarWatcher/auto-pairs'
on_event = 'VimEnter'
hook_post_source = 'call plug#autopairs#hook_post_source()'

[[plugins]]
repo ='junegunn/goyo.vim'
on_cmd = 'Goyo'

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
build = 'sh -c "cd app && yarn install"'
on_map = '<Plug>MarkdownPreviewToggle'

[[plugins]]
repo = 'RRethy/vim-hexokinase'
build = 'make hexokinase' # golang required
on_event = 'VimEnter'
hook_source = '''
let g:Hexokinase_ftOptInPatterns = {
      \ 'vim': 'full_hex',
      \ 'yaml': 'full_hex',
      \ 'json': 'full_hex',
      \}
'''
hook_post_source = 'HexokinaseTurnOn'

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_source = 'call plug#markdown#hook_source()'

[[plugins]]
repo = 'tyru/open-browser.vim'
on_cmd = ['OpenBrowser', 'OpenBrowserSearch', 'OpenBrowserSmartSearch']
on_map = '<Plug>(openbrowser-'
# disable netrw's gx mapping
hook_post_source = 'let g:netrw_nogx = 1'

[[plugins]]
repo = 'diepm/vim-rest-console'
on_event = 'VimEnter'
hook_add = '''
" -i, --include     responseヘッダを表示
" -s, --silent      進捗を表示しない
" -S, --show-error  -sフラグ付与時にエラーは表示
" -L, --location    リダイレクトを追う
let g:vrc_curl_opts = { '-isSL': '' }
let g:vrc_trigger = '<Leader><CR>'
'''

# [[plugins]]
# repo = 'vim-jp/vimdoc-ja'
# on_cmd = 'help'

#
# colorscheme
#
[[plugins]]
repo = 'cocopon/iceberg.vim'
on_if = 'g:colorscheme ==# "iceberg"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]]
repo = 'popkirby/lightline-iceberg'
on_if = 'g:colorscheme ==# "iceberg"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]] # has lightline theme
repo = 'arcticicestudio/nord-vim'
on_if = 'g:colorscheme ==# "nord"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']
hook_add = 'let g:nord_uniform_status_lines = 0'

[[plugins]] # has lightline theme
repo = 'yuttie/hydrangea-vim'
on_if = 'g:colorscheme ==# "hydrangea"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]]
repo = 'djjcast/mirodark'
on_if = 'g:colorscheme ==# "mirodark"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]] # has lightline theme
repo = 'whatyouhide/vim-gotham'
on_if = 'g:colorscheme ==# "gotham"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]] # has lightline theme
repo = 'fcpg/vim-farout'
on_if = 'g:colorscheme ==# "farout"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]] # has lightline theme
repo = 'adigitoleo/vim-mellow'
on_if = 'g:colorscheme ==# "mellow"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']

[[plugins]]
repo = 'Lokaltog/vim-monotone'
on_if = 'g:colorscheme ==# "monotone"'
on_event = 'SourcePre'
depends = ['vim-gitgutter']
